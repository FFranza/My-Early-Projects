#!/bin/bash
# This Script will not run WITHOUT Sudo 
# This security tool installs, implements, and edits your system to harden and secure your Linux Desktop
# It will only work on RPM based systems
# The configured settings were used in reference to the CIS Ubuntu 20.4 LTS Benchmark 
# Functions are used for automations, if its in the case statements then it means it has to be done manually i.e Adding Users
if [ $EUID !=  "0" ]
  then echo "Run script with sudo."
  exit
fi
#________________________________________________#
automatic_password_policy()
# These values allow edit and changes based on any updates standards on password policy
# All edits are made to the /etc/security/pwquality.conf
# This section allows to change the values found without it being specified to the default value. Only change the number value.
# Find a sed manuel before editing the file if usage of sed is not clear
# Sed is a linux bash command that allows the user with sudo privliges to edit lines of text
# 437 of the CIS Benchmark 
{
sed -i 's/^minlen.*/minlen = 16/' /etc/security/pwquality.conf
sed -i 's/^minclass.*/minclass = 4/' /etc/security/pwquality.conf
sed -i 's/^ucredit.*/ucredit = -1/' /etc/security/pwquality.conf
sed -i 's/^dcredit.*/dcredit = -1/' /etc/security/pwquality.conf
sed -i 's/^ocredit.*/ocredit = -1/' /etc/security/pwquality.conf
sed -i 's/^lcredit.*/lcredit = -1/' /etc/security/pwquality.conf

# Anything beyond here edits other files, it will be in the /etc/pam.d directory 
sed -i '25s/$/ try_first_pass local_users_only retry=3/' /etc/pam.d/common-password 
sed -i '/secure$/a auth required pam_tally2.so onerr=fail audit silent deny=5 unlock_time=900' /etc/pam.d/common-auth
sed -i '/unix.so$/a account requisite pam_deny.so' /etc/pam.d/common-account
sed -i '/deny.so$/a account required pam_tally2.so' /etc/pam.d/common-account
}
#________________________________________________#
installing_updates_and_tools()
# Really simple concept. Updates the system and installs necessary package. PLEASE RUN "sudo dpkg --configure -a" if it's not allowing you to use apt-get
# Also the repositories of apt-get are in "/etc/apt/sources.list" if its not working check it out
# Installs UncomplicatedFirewall, PWQuality, Auditcl, SysLog, Sudo, rkhunter, and ClamAV
{
apt-get -y update && apt-get -y upgrade && apt-get -y dist-upgrade
apt-get -y install ufw && apt-get -y install libpam-pwquality && apt-get -y install auditd audispd-plugins && apt-get -y install rsyslog && apt-get -y install sudo-ldap && apt-get -y install lynis && apt-get -y install rkhunter && apt-get -y install clamav 
}

#________________________________________________#
ufw_configuration()
# Goes over closing and managing traffic and ports of firewalls by using the ufw tool and makes it more easier to run automatically
# 217 of the CIS Benchmark
# Take in mind using ufw means iptables will need be deleted
# If you need to allow any port or tcp or udp protocol use "ufw allow in <port>/<tcp or udp protocol>
# Use ufw allow <port/protocol> if any specific port is needed
{
ufw allow proto tcp from any to any port 22 # Allows port 22
ufw allow in http # Allows http port coming in
ufw allow in https # Allows https port coming in
ufw allow in on lo # Allows to view loopback on network interface
ufw allow out on lo # Similar to line above
ufw deny in from 127.0.0.0/8 # Ignores loopback from v4
ufy deny in from ::1 # Ignores loopback from v6
ufw allow out 53 # Allows DHCP port coming out
ufw logging on # Logs port coming in and out
ufw enable # Flushes ports and enables ufw
ufw default deny incoming
ufw default deny outgoing # All default deny lines closes all ports not related of line above it, if needed add specific ports 
ufw default deny routed
}
#________________________________________________#
auditing_configuration()
# The text files made and edit ensure that the workstation is being properply audited while its logs are kept in a timely manner
# Page 279 of CIS Benchmark
# For further reasoning on why the long list of rules on audits, see page of CIS Benchmark Just read it, it'll make sense for all these rules
{
systemctl --now enable auditd
sed -i 's/action =$/ keep_logs/' /etc/audit/auditd.conf # Keeps log of audits
echo "-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change

-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-
change

-a always,exit -F arch=b64 -S clock_settime -k time-change
-a always,exit -F arch=b32 -S clock_settime -k time-change
-w /etc/localtime -p wa -k time-change
-w /etc/group -p wa -k identity
-w /etc/passwd -p wa -k identity
-w /etc/gshadow -p wa -k identity
-w /etc/shadow -p wa -k identity
-w /etc/security/opasswd -p wa -k identity
-a always,exit -F arch=b32 -S sethostname,setdomainname -F key=system-locale
-w /etc/issue -p wa -k system-locale
-w /etc/issue.net -p wa -k system-locale
-w /etc/hosts -p wa -k system-locale
-w /etc/network -p wa -k system-locale
-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale
-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
-w /etc/issue -p wa -k system-locale
-w /etc/issue.net -p wa -k system-locale
-w /etc/hosts -p wa -k system-locale
-w /etc/network -p wa -k system-locale
-w /etc/apparmor/ -p wa -k MAC-policy
-w /etc/apparmor.d/ -p wa -k MAC-policy
-w /var/log/faillog -p wa -k logins
-w /var/log/lastlog -p wa -k logins
-w /var/log/tallylog -p wa -k logins
-w /var/run/utmp -p wa -k session
-w /var/log/wtmp -p wa -k logins
-w /var/log/btmp -p wa -k logins
-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F
auid!=4294967295 -k perm_mod
-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F
auid!=4294967295 -k perm_mod
-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F
auid>=1000 -F auid!=4294967295 -k perm_mod
-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F
auid>=1000 -F auid!=4294967295 -k perm_mod
-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S
removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295
-k perm_mod
-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S
removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295
-k perm_mod
-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S
ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S
ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S
ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S
ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access" > /etc/audit/rules.d/eventandmodify.rules # Creates a rule text file so that modify dates and event informations are collected
}
#________________________________________________#
setup_of_antivirustools()
# rkhunter is a rootkit scanning tool that finds rootkits into the system and allows the user to remove the rootkit when found
# Configuration of rkhunter is not on the ubuntu benchmark but on this website https://www.atlantic.net/dedicated-server-hosting/detect-linux-security-holes-and-rootkits-with-rkhunter-on-ubuntu-20-04/
{
sed -i 's/^WEB_CMD*./# WEB_CMD='/etc/rkhunter.conf # Disables WEB_CMD 
sed -i 's/^UPDATE_MIRROS*./UPDATE_MIRRORS=1' /etc/rkhunter.conf
sed -i 's/^MIRRORS_MODE*./MIRRORS_MODE=0' /etc/rkhunter.conf
echo "CRON_DAILY_RUN"="true"
CRON_DB_UPDATE="true"
APT_AUTOGEN="true" > etc/deafult/rkhunter.conf
rkhunter --update
}
#________________________________________________#
while [ "$user_response_to_menu" != "0" ]
  do
    echo "Please select an option to run script"
    echo "1 Updates"
    echo "2 Password Policies"
    echo "3 Firewall"
    echo "4 Audits"
    read $user_response_to_menu
    case $user_response_to_menu in

      1)
        installed_files=$(apt-get -y update && apt-get -y upgrade && apt-get -y dist-upgrade && apt-get -y install ufw && apt-get -y install libpam-pwquality && apt-get -y install auditd audispd-plugins && apt-get -y install rsyslog && apt-get -y install sudo-ldap && apt-get -y install lynis && apt-get -y install rkhunter && apt-get -y install clamav)
        if echo "$installed_files" | grep -q 'Reading Package lists....Done$'; then
            echo "Packages have already been installed"
        else
            echo $(installing_updates_and_tools)
        fi
        exit
        ;;
      
      2)
        echo "Before running this command, are your admin users satisfying Benchmark rules? (DONT LOCK YOURSELF OUT)"
        echo "1 Yes"
        echo "2 No"
        read user_response_to_case2
        if [ "$user_response_to_case2" = "1" ]; then
            echo "Script is running a check configuration files, give it a moment..."
            if grep -q '^minlen = 16' /etc/security/pwqaulity.conf \
                || grep -q '^minclass = 4' /etc/security/pwqaulity.conf \
                || grep -q '^ucredit = -1' /etc/security/pwqaulity.conf \
                || grep -q '^dcredit = -1' /etc/security/pwqaulity.conf \
                || grep -q '^lcredit = -1' /etc/security/pwqaulity.conf \
                || grep -q '^ocredit = -1' /etc/security/pwqaulity.conf \
                || grep -q ' try_first_pass local_users_only retry=3' /etc/pam.d/common-password \
                || grep -q 'account requisite pam_deny.so' /etc/pam.d/common-auth/
                || grep -q 'auth required pam_tally2.so onerr=fail audit silent deny=5 unlock_time=900' /etc/pam.d/common-auth \
                || grep -q 'account requisite pam_deny.so' /etc/pam.d/common-account \
                || grep -q '/deny.so$/a account required pam_tally2.so' /etc/pam.d/common-account
                then echo "pwquality configuration values have been already set"
                else echo $(automatic_password_policy)
            fi
            else echo "Access Option 4 and update the admins passwords"
        fi
        ;;
      
      3)
        echo $(ufw_configuration)
        ufw_status=$(ufw status)
        if echo "$ufw_status" 
        exit
        ;;
      4)
        echo $(auditing_configuration)
        exit
        ;;
    esac
done