#!/bin/bash

# Sudo is required for this script to run, if the script is not runned with sudo it will run a exit command
# Table of Contents for Configuration #
# Line 89 for Security Tools using apt command (Comment: May want to add extra tools specificed on the read me)
# Line 114 for Remvoing Samba Related Files (Comment: Use Wildcards to remove extra files, may want to add apt autoremove for unneeded packages)
# Line 170 - 177 for Password Policy through PAM config (Comment: Edit the Variables on those lines then run command)

# Use $ and open curved brackets to use these colors, use line 11 as an example
REDCOLOR='\033[1;31m'
GREENCOLOR='\033[1;32m'
YELLOWCOLOR='\033[1;33m'
NOCOLOR='\033[0m'
if [ "$EUID" != "0" ]
    then clear && echo -e "${REDCOLOR}How the hell did you even get here? Run the script with sudo dumb dumb ­ЊЃ░"
    exit
fi

###########################################################################
# Main Script                                                             #
###########################################################################

while [ "$user_response_to_main_menu" != "FDWA" ] # This while while statement allows the script to run a loop when returning from sub menues
do
    clear
    echo "                                                             РађРађ РађРађРађРађРађРађРађРађРбђРаћРађРађРађРађРађРађРађРађРађРађРааРАђРађРађРађРађРбцРАѕРбдРАѕРаЎРабРБђРађРађРађРБаРБ┤РБЙРАЄ"РађРађРађРађРађРађ
    echo "                                                             РађРађ РађРађРађРађРађРађРбђРБ┤РаЄРађРађРађРађРађРађРађРађРађРађРађРађРаЎРбєРађРађРађРаљРАЮРбёРаЎРбёРађРаѕРабРАђРБ╝РБ┐РАЃРбўРБ┐"РађРађРађРађРађРађ# Astolfo
    echo "                                                             Рађ РађРБЙРА│РаХРБцРБђРБЙРаЈРађРађРађРађРађРађРађРађРађРађРађРађРађРађРаѕРбиРАђРађРађРаѕРАёРаЎРафРБ│РађРађРа╣РБ┐РБ┐РБ┐РБ┐РБ┐"РађРађРађРађРађРађ# Bulge Bulge
    echo "                                                             Рађ РађРбИРБДРБ┤РБ┐Рб┐РаЃРађРађРађРађРађРађРађРађРађРађРађРађРађРАђРађРађРАёРб│РАёРађРађРаўРБєРађРађРаЉРбёРађРбИРБ┐РБ┐РБ┐РАЪ"РађРађРађРађРађРађ
    echo "РЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРађРађ РађРб┐РБ┐РАЪРађРађРађРађРбИРађРађРађРађРађРађРађРађРађРађРБЄРађРађРб╣РАђРб╗РАђРађРађРаўРбдРађРађРађРа│РБ╝РБ┐РБ┐РБ┐РБДРБё"РађРађРађРађРађ 
    echo "РЋЉ                Secure that Computer РїљРќа_Рќа                  РЋЉРађРађ РађРаѕРб┐РБиРађРађРађРбђРАјРађРађРађРађРађРађРађРађРађРађРађРађРађРбИРбЄРаѕРБиРађРаѕРбдРАѕРб│РАђРађРађРађРаЎРб┐РБ┐РБ┐РБ┐РБ┐РБдРАђ"РађРађ
    echo "РЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРађ РбђРБцРБХРА┐РађРађРађРађРА╝РаЄРађРБЄРађРађРађРађРађРађРађРађРађРађРбђРБєРаѕРбБРАўРАєРађРађРаЎРАєРАЎРбєРађРађРађРађРаѕРаЕРбЇРАЅРаЅРаЊ"РађРађ
    echo "РЋЉ                                                           РЋЉ РБаРБ┐Ра┐РА┐РаЂРађРађРађРБ░РаЂРађРб░Ра╗РБёРАђРађРађРађРађРађРБИРАЄРбђРБ┐РаЂРађРађРаЎРБ┐РађРађРађРб▒РаљРађРа│РБёРађРаљРањРањРаѓРааРаћРаѓ"РађРађ
    echo "РЋЉ                                                           РЋЉ РаЅРађРА╝РбЂРаєРАєРађРА┤РаІРађРБиРаЈРаЅРа╣РАиРАёРбђРађРађРбђРаЈРБЄРБюРАЄРађРађРБђРБђРБИРАєРађРађРбИРБЙРађРб║РБёРаЎРбдРБђРБђРађРађРбб"РађРађРађ
    echo "РЋЉ       [1] Packages                  [3] Firewall          РЋЉРађ РаѕРађРБюРА╝РБАРБЙРађРб║РађРАЈРађРађРађРаЂРаѕРб║РБДРађРбИРбђРА┐РаЎРаАРБ┤РБ┐РБ┐РБ┐РАЪРА┐РаЂРађРађРБиРАЄРбИРб┐РађРађРа╗РАЇРаЎРаиРбђРаЃ"РађРађ
    echo "РЋЉ                                                           РЋЉРааРађРађРађРаеРађРАЄРбИРађРаўРАёРБЄРБаРБ┤РБХРБХРБ┐РБёРАўРбиРБ╝РАќРаЃРађРаўРаЅРа┐РаЏРаЏРаЂРаЂРађРађРађРБ┐РБиРаѕРБ»РађРађРађРАїРбєРађРађРаЂ"РађРађ
    echo "РЋЉ                                                           РЋЉРађРађРађРађРађРађРаЃРбИРАєРађРб╣РБ┐РА┐РаЂРаЎРа┐РаЪРаЏРађРађРаѕРаЂРађРађРађРађРађРађРађРбаРАђРбаРаЂРађРБ┐РБЕРБДРб╗РаБРАђРађРб▒РађРАД"РађРађРађРађ
    echo "РЋЉ                                                           РЋЉРађРађРађРађРађРађРађРАЈРбБРађРбИРБ╣РБ┐РБёРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРбИРБ┐РА╝РађРБ╝РБ┐РаЂРаѕРбФРБЄРБ╣РБиРАдРБиРАќРацРБё"РађРађ
    echo "РЋЉ       [2] PassPol                   [4] User              РЋЉРађРађРађРађРађРађРБЙРАЄРаѕРАєРбИРаЪРаІРбДРађРађРађРађРађРађРађРађРађРађРађРађРађРађРбђРАъРб╣РАЄРбаРБ┐РаЏРАђРађРаѕРБ┐РБ┐РаѕРањРа║РБйРбиРБёРБ│РАђ"
    echo "РЋЉ                                                           РЋЉРађРађРађРађРађРађРаѕРб│РађРбИРБЈРађРаљРБ┐РБєРађРађРађРађРађРбђРБђРАцРаёРађРађРбђРађРаѕРађРА┐РађРБ╝РАЄРбђРБ┐РБёРБЄРб╗Рб┐РБ│РађРађРаўРБєРађРб╗РАЄ"
    echo "РЋЉ                                                           РЋЉРађРађРађРађРбђРАаРбџРБ┐РБєРАъРб┐РАђРађРаЅРаЏРа│РбёРАђРађРађРаўРа┐РбђРБђРАђРацРаіРађРбђРБ╝РаЃРб░РБ┐РађРБЙРБ┐РБїРБ┐РАЙРађРаЎРб│РАђРађРаѕРБєРађРаЄ"
    echo "РЋЉ                    [EXM] Exit Script                      РЋЉРађРађРађРА░РаІРАаРаІРбђРАЪРб╣РађРб┐РањРБцРАђРађРађРаѕРаЉРањРацРбёРађРађРађРађРБаРАХРбЏРАЈРбаРБ┐Рб╗РАЙРаЃРаѕРАЪРб┐РаЃРбђРб▒РАђРбДРађРађРаўРАє"Рађ
    echo "РЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРађРађРб░РбЃРАјРађРађРађРб│РаѕРАЄРаѕРбБРАИРАЅРбдРБђРађРађРађРађРађРаЉРБдРБ┤РБ┐РА┐РаЂРБ╝РА┤РаІРаЈРБ╝РАЄРађРађРб│РбИРБДРаИРађРа│РБ╝РАєРађРађРАЪ"Рађ
    echo "РЋЉ                  Please select an option                  РЋЉРађРађРаИРађРа▒РАёРађРађРаѕРБЄРб╣РАђРађРБ┐РБйРБёРБ┐РбиРАёРађРађРађРађРБ┐РБ┐РаЈРађРБ░РаЈРађРађРаўРбЂРаЄРађРађРбИРаёРб╗РБдРАЄРађРАЪРб│РађРаИРаЂ"Рађ
    echo "РЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРађРађРађРађРађРаўРбєРађРађРаўРАёРбДРађРбИРБдРаЅРб╗РАЈРађРађРађРађРб░РА┐РАЈРађРаљРаЂРађРађРађРађРбИРађРађРађРА╝РађРбўРБ┐РаЂРааРађРАјРБ░Раѓ"РађРађ

    read user_response_to_main_menu # Variable is read to respond to case menu running after echo script clearing previous menu after user input
    clear

    ###########################################################################
    # Main Case                                                               #
    ###########################################################################

    case $user_response_to_main_menu in

        1) # Display Apt Packages
            while [ "$user_response_to_MainAPG_menu" != "3" ] # Sets variable to exit while statement to return to the main menu or inputs a invalid option and loops option
            do
                clear
                echo "РЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљ" 
                echo "РЋЉ             Welcome to the APG install Menu               РЋЉ"
                echo "РЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљ"
                echo "РЋЉ                                                           РЋЉ"
                echo "РЋЉ      [1][APGINSTALL]                 [2][APGREMOVE]       РЋЉ"
                echo "РЋЉ                        [3][ExitAPG]                       РЋЉ"
                echo "РЋЉ                                                           РЋЉ"
                echo "РЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљ"
                echo "РЋЉ        These are the current packages installed           РЋЉ"
                echo "РЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљ"
                read user_response_to_MainAPG_menu
                
                case $user_response_to_MainAPG_menu in

                        1) # Install all needed and security updates
                        clear
                        echo -e "${REDCOLOR}РЋЉ Updates are now being installed, please wait for a moment РЋЉ${NOCOLOR}"
                        echo ""
                        apt install update && apt upgrade
                        echo ""
                        echo -e "${GREENCOLOR}РЋЉ    Updates and Upgrade have been fully implemented   РЋЉ${NOCOLOR}"
                        echo -e "${YELLOWCOLOR}РЋЉ Would you like to install additional security tools? РЋЉ${NOCOLOR}"
                        echo -e "${YELLOWCOLOR}РЋЉ            Yes                       No              РЋЉ${NOCOLOR}"    
                        read user_response_to_APGInstall_menu # Reads case statement for sub APG choice

                            case $user_response_to_APGInstall_menu in # Case statement for installing or not installing security packages

                                Y) # Install Additional Security Tools
                                clear
                                echo -e "${REDCOLOR}РЋЉ Security Updates are now being installed, please wait for a moment РЋЉ${NOCOLOR}"
                                echo ""
                                apt install ufw && echo "${GREENCOLOR}РЋЉ   Firewall has been installed   РЋЉ${NOCOLOR}" && apt install libpam-pwquality && echo "${GREENCOLOR}РЋЉ   PWQuality has been installed   РЋЉ${NOCOLOR}" && apt install auditd && echo "${GREENCOLOR}РЋЉ   Daemon has been installed   РЋЉ${NOCOLOR}"
                                echo ""
                                echo -e " ${GREENCOLOR}РЋЉ   Updates and Upgrade have been fully implemented   РЋЉ${NOCOLOR}"
                                echo ""
                                echo -e "${YELLOWCOLOR}РЋЉ Press Enter to leave this menu РЋЉ${NOCOLOR}"
                                read;;

                                N) # Not cause you don't have time
                                clear
                                echo -e "${YELLOWCOLOR}РЋЉ Press Enter to leave this menu РЋЉ${NOCOLOR}"
                                read;;

                                *) # Invalid Option
                                clear
                                echo -e "${REDCOLOR}РЋЉ Invalid Option, press enter to leave the menu РЋЉ${NOCOLOR}"
                                read;;
                            esac
                        echo -e "${YELLOWCOLOR}РЋЉ Press Enter to leave this menu РЋЉ${NOCOLOR}"
                        read;;

                        2) # Remove Samba related 
                        clear
                        echo -e "${REDCOLOR}РЋЉ Removing all Samba related files, please wait for a moment РЋЉ${NOCOLOR}"
                        echo ""
                        apt-get remove .*samba.* .*smb.*
                        echo ""
                        echo -e "${GREENCOLOR}РЋЉ All Samba files have been removed РЋЉ${NOCOLOR}" 
                        echo ""
                        echo -e "${YELLOWCOLOR}РЋЉ Press enter to levae this menu РЋЉ${NOCOLOR}"
                        read;;
                esac
            done
            user_response_to_MainAPG_menu="ADIasdwkandias" # SET THIS FOR EVERY CASE TO RESET VARIABLE PLEASE DO NOT FORGET TO RESET YOUR VARIABLE YOU SEE THIS I KNOW YOU DO
            ;;
        
        2) # Display Password Policy
            while [ "$user_response_to_PassPol" != "2" ] # Allows user to loop this section until certain word is ran to exit this section and return to main menu
            do
                clear
                echo "РЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљ" 
                echo "РЋЉ           Welcome to the Password Policy Menu             РЋЉ"
                echo "РЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљ"
                echo "РЋЉ                                                           РЋЉ"
                echo "РЋЉ   [1] Run Password Policy          [2] Exit Menu          РЋЉ"
                echo "РЋЉ                                                           РЋЉ"
                echo "РЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљ"
                echo "РЋЉ               [Current Policies Settings]                 РЋЉ"
                echo "РЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљ"
                echo "РЋЉ                                                           РЋЉ"
                echo " $(grep "PASS_MIN_DAYS" /etc/login.defs | cut -d " " -f 2) "
                echo "РЋЉ                                                           РЋЉ"
                echo " $(grep "PASS_MAX_DAYS" /etc/login.defs | cut -d " " -f 2) "
                echo "РЋЉ                                                           РЋЉ"
                echo " $(grep "PASS_WARN_DAYS" /etc/login.defs | cut -d " " -f 2)"
                echo "РЋЉ                                                           РЋЉ"
                echo "РЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљ"
                echo "РЋЉ                 [Current PAM Settings]                    РЋЉ"
                echo "РЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљ"
                echo "РЋЉ                                                           РЋЉ"
                echo " $(grep "minlen" /etc/login.defs | cut -d "=" -f 2)        "
                echo "РЋЉ                                                           РЋЉ"
                echo " $(grep "dcredit" /etc/login.defs | cut -d "=" -f 2)       "
                echo "РЋЉ                                                           РЋЉ"
                echo " $(grep "ucredit" /etc/login.defs | cut -d "=" -f 2)       "
                echo "РЋЉ                                                           РЋЉ"
                echo " $(grep "ocredit" /etc/login.defs | cut -d "=" -f 2)       "
                echo "РЋЉ                                                           РЋЉ"
                echo " $(grep "lcredit" /etc/login.defs | cut -d "=" -f 2)       "
                echo "РЋЉ                                                           РЋЉ"
                echo "РЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљ"
                
                
                # Read input from user and store it in the RPAP variable
                
                read user_response_to_PassPol
                
                if [ "$user_response_to_PassPol" = "1" ]; then

                    # Set password policy parameters
                    password_min_age=10
                    password_max_age=90
                    password_warn_age=7
                    pam_pwquality_try_first_pass
                    pam_pwquality_minlen=16
                    pam_pwquality_dcredit=-1
                    pam_pwquality_ucredit=-1
                    pam_pwquality_ocredit=-1
                    pam_pwquality_lcredit=-1 
                    
                    # Get list of all users on the system
                    users=$(cut -d: -f1 /etc/passwd)
                    
                    # Configure password policy for each user
                    echo -e "${REDCOLOR}РЋЉ Setting password policy for the system, please wait РЋЉ${NOCOLOR}"
                    sed -i "s/PASS_MAX_DAYS.*$/PASS_MAX_DAYS=$password_max_age/" /etc/login.defs
                    sed -i "s/PASS_MIN_DAYS.*$/PASS_MIN_DAYS=$password_min_age/" /etc/login.defs
                    sed -i "s/PASS_WARN_AGE.*$/PASS_WARN_AGE=$password_warn_age/" /etc/login.defs
                    sed -i '/pam_pwquality.so/ s/$/ try_first_pass/' /etc/pam.d/system-auth
                    sed -i "s/\(pam_pwquality\.so.*\)\(minlen=[0-9]\+\)/\1 minlen=$pam_pwquality_minlen/" /etc/pam.d/common-password
                    sed -i "s/\(pam_pwquality\.so.*\)\(dcredit=[-0-9]\+\)/\1 dcredit=$pam_pwquality_dcredit/" /etc/pam.d/common-password
                    sed -i "s/\(pam_pwquality\.so.*\)\(ucredit=[-0-9]\+\)/\1 ucredit=$pam_pwquality_ucredit/" /etc/pam.d/common-password
                    sed -i "s/\(pam_pwquality\.so.*\)\(ocredit=[-0-9]\+\)/\1 ocredit=$pam_pwquality_ocredit/" /etc/pam.d/common-password
                    sed -i "s/\(pam_pwquality\.so.*\)\(lcredit=[-0-9]\+\)/\1 lcredit=$pam_pwquality_lcredit/" /etc/pam.d/common-password                        
                    echo -e "${GREENCOLOR}РЋЉ Password policy set successfully for user РЋЉ${NOCOLOR}"
                fi
            done
            user_response_to_PassPol="dwajndwdsacoejrnqsdwq"
            ;;

        3) # Display Firewall
            clear
            echo "РЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљ" 
            echo "РЋЉ                  Please select an option                  РЋЉ"
            echo "РЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљ"
            read;;

        4) # Display User Configuration
            while [ "$user_response_to_user_management" != "ExitUSR" ]
            do 
            clear
                echo "РЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљ" 
                echo "РЋЉ              Welcome to the USR Config Menu               РЋЉ"
                echo "РЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљ"
                echo "РЋЉ                                                           РЋЉ"
                echo "РЋЉ     [1] Create New Users           [2] Remove Users       РЋЉ"
                echo "РЋЉ                                                           РЋЉ"
                echo "РЋЉ [3] Disabling Guest User        [4] +/- Users From Group  РЋЉ"
                echo "РЋЉ                                                           РЋЉ"
                echo "РЋЉ    [5] Lock Root User                                     РЋЉ"
                echo "РЋЉ                                                           РЋЉ"
                echo "РЋЉ                         [ExitUSR]                         РЋЉ"
                echo "РЋЉ                                                           РЋЉ"
                echo "РЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљ"
                read USRANSWR

                case $USRANSWR in

                    1) # Create New Users
                    clear
                    echo -e "${YELLOWCOLOR}РЋЉ Please enter a username РЋЉ${NOCOLOR}" # Prompt for username
                    read username
                    if id "$username" >/dev/null 2>&1; then
                        echo -e "${REDCOLOR}РЋЉ User $username already exists РЋЉ${NOCOLOR}"
                    fi
                    echo -e "${YELLOWCOLOR}РЋЉ Please enter a password РЋЉ${NOCOLOR}"
                    read -s password
                    echo

                    useradd -m "$username"

                    echo "$username:$password" | chpasswd

                    echo -e "${GREENCOLOR}РЋЉ User $username created succesfully РЋЉ${NOCOLOR}"
                    read;;

                    2) # Remove Users
                    clear
                    echo "Hello4"
                    read;;

                    3) # Disable Guest User
                    clear
                    echo "Hello5"
                    read;;

                    4) # Add or Remove New Users from group
                    clear
                    echo "Hello6"
                    read;;
                esac
            done
            USRANSWR="SADNiacxzcwqieuasd" # Variable reset to reset script from main USR Menu
            ;;
        
        EXM)
        clear
        echo -e "${GREENCOLOR}Thank you for using my Security Script ╩ЋсЂБРђбр┤ЦРђб╩ћсЂБ${NOCOLOR}"
        echo -e "${GREENCOLOR}-FF"
        exit
        ;;
    esac

done

#_________________CAPTURE THE FLAG BABY___________________#
echo " (_)"
echo "<___>"
echo " | |______"
echo " | |      )"
echo " | |      (_________"
echo " | |      |         )"
echo " | |      |         (________________"
echo " | |      |          |              |"
echo " | |      |          |              |"
echo " | |      |          |              |"
echo " | |      |          |              |"
echo " | |      |          |              |"
echo " | |~~~~~~|          |              |"
echo " | |      |          |              |"
echo " | |      '~~~~~~~~~~|              |" 
echo " | |                 |              |"
echo " | |                 '~~~~~~~~~~~~~~|"
echo " | |                                '"
echo " | |"
echo " | |"
echo " | |"
echo " | |"
echo "  - "
#!/bin/bash

# Set the directory to search
dir="/path/to/directory"

# Set the list of hazardous file types
hazardous_types=(".exe" ".bat" ".com" ".vbs" ".cmd" ".scr" ".pif" ".lnk")

# Iterate over each file in the directory
for file in "$dir"/*; do
  # Get the file extension
  extension="${file##*.}"
  
  # Check if the file extension is in the list of hazardous types
  if [[ " ${hazardous_types[@]} " =~ " ${extension} " ]]; then
    # Remove the file if it is hazardous
    rm "$file"
  fi
done
